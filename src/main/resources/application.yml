server:
  port: 18101

spring:
  shardingsphere:

    # 配置多个数据源
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://120.79.209.191:3306/test?characterEncoding=utf-8&useSSL=false
        username: root
        password: yisixian546621
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.1.115:33060/test?characterEncoding=utf-8&useSSL=false
        username: root
        password: 123456

    # 数据库垂直拆分（不同的表在不同的库中）
    sharding:
      tables:
        user_info:
#          defaultDataSourceName: ds0.user_info
          # 配置单表数据源
          actual-data-nodes: ds0.user_info
          # 配置主键策略
#          key-generator-column-name: id
          key-generator:
                  type: SNOWFLAKE
                  column: id
        cs_order:
          # 配置单表数据源(分表处理)
          actual-data-nodes: ds1.cs_order_$->{0..1}
          # 配置主键策略
          key-generator-column-name: id
          key-generator:
                  type: SNOWFLAKE
                  column: id

          ## 分表策略
          table-strategy:
            # inline 表达式配置分表
            inline:
              sharding-column: node
              algorithm-expression: cs_order_$->{node}

             # 自定义分表算法
#            standard:
#              sharding-column: node
#              precise-algorithm-class-name: com.example.sharding.domain.algorithm.CsOrderTableShardingAlgorithm



